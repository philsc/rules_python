# Copyright 2017 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
load("@bazel_binaries//:defs.bzl", "bazel_binaries")
load(
    "@rules_bazel_integration_test//bazel_integration_test:defs.bzl",
    "bazel_integration_test",
    "bazel_integration_tests",
    "default_test_runner",
    "integration_test_utils",
)
load(":integration_test.bzl", "rules_python_integration_test")

licenses(["notice"])  # Apache 2.0

_LEGACY_FLAGS = [
    "--noenable_bzlmod",
]

default_test_runner(
    name = "legacy_test_runner",
    bazel_cmds = [
        "info {}".format(" ".join(_LEGACY_FLAGS)),
        "test {} //...".format(" ".join(_LEGACY_FLAGS)),
    ],
)

default_test_runner(
    name = "simple_test_runner",
)

rules_python_integration_test(
    name = "build_file_generation_example",
)

rules_python_integration_test(
    name = "bzlmod_build_file_generation_example",
    bzlmod = True,
)

rules_python_integration_test(
    name = "pip_parse_example",
)

rules_python_integration_test(
    name = "pip_parse_vendored_example",
    tags = ["fix-windows"],
)

rules_python_integration_test(
    name = "pip_repository_annotations_example",
)

rules_python_integration_test(
    name = "py_proto_library_example",
)

rules_python_integration_test(
    name = "py_proto_library_example_bzlmod",
    # Since we can't strip "_example" from the name to infer the workspace
    # path, we have to specify it manually here.
    workspace_path ="py_proto_library",
    bzlmod = True,
)

rules_python_integration_test(
    name = "multi_python_versions_example",
    bzlmod = True,
)

rules_python_integration_test(
    name = "bzlmod_example",
    bzlmod = True,
)

test_suite(
    name = "integration_tests",
    tests = [
        test for tests_name in (
            ":build_file_generation_example",
            ":bzlmod_build_file_generation_example",
            ":pip_parse_example",
            ":pip_parse_vendored_example",
            ":pip_repository_annotations_example",
            ":py_proto_library_example",
            ":py_proto_library_example_bzlmod",
            ":multi_python_versions_example",
            ":bzlmod_example",
        ) for test in integration_test_utils.bazel_integration_test_names(
            tests_name,
            bazel_binaries.versions.all,
        )
    ],
)
